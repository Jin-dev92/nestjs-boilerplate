version: "3.5"
services:
  nginx:
    image: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    depends_on:
      - nestjs-server
    volumes:
      #      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config:/etc/nginx
  #      - ./nginx/logs:/var/log/nginx

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    shm_size: 128mb
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
#      - ./database/migrations/initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul
    #    command:
    #      - psql -U ${POSTGRES_USER} -d ${POSTGRES_DB}
    env_file:
      - .env

  nestjs-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./node_modules:/usr/src/app/node_modules # local 의 node_modules 을 참조
      - ./:/usr/src/app # local 의 코드를 참조
    container_name: nestjs-server
    environment:
      TZ: Asia/Seoul
    depends_on:
      - postgres
    env_file:
      - .env

volumes:
  postgres_data:
#networks:
#  default:
#    external: true
