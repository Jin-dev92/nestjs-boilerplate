#version: "3.8"
services:
  nginx:
    image: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: unless-stopped
    depends_on:
      - api
    volumes:
      - ./nginx/config:/etc/nginx

  postgres:
    image: postgres:15
    ports:
      - 5432:5432
    shm_size: 128mb
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Asia/Seoul
    env_file:
      - .env

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    volumes:
      - ./prometheus/config/:/etc/prometheus/
      - ./prometheus/prometheus-volume:/prometheus
    ports:
      - 9090:9090
    command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    networks:
      - prometheus-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    # user: "$GRA_UID:$GRA_GID"
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana-volume:/var/lib/grafana
    restart: always
    depends_on:
      - prometheus
    networks:
      - prometheus-net


  alert-manager:
    image: prom/alertmanager
    container_name: alert-manager
    #    build:
    #        context: ./alert-manager
    #        dockerfile: Dockerfile
    volumes:
      - ./alert-manager/config/:/etc/alert-manager/
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alert-manager/alert-manager.yml'
    restart: always
    depends_on:
      - prometheus
    networks:
      - prometheus-net


  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    volumes:
      - ./node_modules:/usr/src/app/node_modules # local 의 node_modules 을 참조
      - ./:/usr/src/app # local 의 코드를 참조
    container_name: server-app
    environment:
      TZ: Asia/Seoul
    depends_on:
      - postgres
    env_file:
      - .env
volumes:
  postgres_data:
networks:
  prometheus-net:
    driver: bridge